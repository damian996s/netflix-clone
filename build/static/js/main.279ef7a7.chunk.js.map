{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovie","fetchComedyMovie","fetchHorrorMovie","fetchRomanceMovie","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","console","table","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","source","then","url","urlParams","URLSearchParams","URL","search","catch","error","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.279ef7a7.chunk.js","sourcesContent":["const API_KEY = \"7deeb7e007eb5c587e5745d52b3f8baf\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/movie?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovie: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovie: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovie: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovie: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n  };\n  \n  export default requests;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance","import React, { useState, useEffect } from \"react\";\nimport axios from './axios';\nimport \"./Row.css\";\nimport YouTube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer'\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    useEffect(() => {\n        async function fetchData() {\n            const request = await axios.get(fetchUrl);\n            console.table(request);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchUrl])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n          autoplay: 1,\n        },\n      };\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl(\"\");\n        } else {\n            movieTrailer(movie?.title || movie?.name || movie?.source)\n            .then((url) => {\n                const urlParams = new URLSearchParams(new URL(url).search);\n                setTrailerUrl(urlParams.get(\"v\"))\n            })\n            .catch((error) => console.log(error));\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\">\n                \n                {movies.map(movie => (\n                    <img\n                    key={movie.id} \n                    onClick={() => handleClick(movie)}\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\n                ))}\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    )\n}\n\nexport default Row","import React, { useState, useEffect } from 'react';\nimport axios from './axios'\nimport requests from './requests'\nimport './Banner.css'\n\nfunction Banner() {\n    const [movie,setMovie] = useState([]);\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(requests.fetchNetflixOriginals);\n            setMovie(\n                request.data.results[\n                    Math.floor(Math.random() * request.data.results.length)\n                ]\n            );\n            return request\n        }\n        fetchData()\n    }, [])\n    console.log(movie)\n    function truncate(str, n) {\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n    }\n    return (\n        <header className=\"banner\"\n        style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n            )`,\n            backgroundPosition: \"center center\"\n        }}\n        >\n            <div className=\"banner__contents\">\n                {/*title*/}\n                <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\n                <div className=\"banner__buttons\">\n                    <button className=\"banner__button\">Play</button>\n                    <button className=\"banner__button\">My List</button>\n                </div>\n                <h1 className=\"banner__description\">\n                    {truncate(movie?.overview, 150)}\n                </h1>\n            </div>\n            <div className=\"banner--fadeBottom\" />\n        </header>\n    )\n}\n\nexport default Banner\n","import React, { useState, useEffect } from 'react'\nimport \"./Nav.css\"\n\nfunction Nav() {\n    const [show, handleShow] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY > 100) {\n                handleShow(true);\n            } else handleShow(false);\n        });\n        return () => {\n            window.removeEventListener(\"scroll\");\n        }\n    }, [])\n    return (\n        <div className={`nav ${show && \"nav__black\"}`}>\n           <img \n            className=\"nav__logo\"\n            src=\"https://www.freepnglogos.com/uploads/red-netflix-logo-text-png-3.png\"\n            alt=\"Netflix Logo\"\n           /> \n           <img \n            className=\"nav__avatar\"\n            src=\"https://pbs.twimg.com/media/DmtcXxYUcAYshhQ.jpg\"\n            alt=\"Netflix Logo\"\n           />\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react'\nimport './App.css';\nimport requests from './requests';\nimport Row from './Row';\nimport Banner from './Banner'\nimport Nav from './Nav'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow/>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovie} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovie} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovie} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovie} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}